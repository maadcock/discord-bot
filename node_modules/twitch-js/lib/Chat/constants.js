'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CHAT_SERVER = exports.CHAT_SERVER = 'irc-ws.chat.twitch.tv';
var CHAT_SERVER_PORT = exports.CHAT_SERVER_PORT = 6667;
var CHAT_SERVER_SSL_PORT = exports.CHAT_SERVER_SSL_PORT = 443;

/**
 * @constant
 * @type {number}
 * @default 5000
 */
var CONNECTION_TIMEOUT = exports.CONNECTION_TIMEOUT = 5000;
var KEEP_ALIVE_PING_TIMEOUT = exports.KEEP_ALIVE_PING_TIMEOUT = 55000;
var KEEP_ALIVE_RECONNECT_TIMEOUT = exports.KEEP_ALIVE_RECONNECT_TIMEOUT = 60000;
/**
 * @constant
 * @type {number}
 * @default 1000
 */
var JOIN_TIMEOUT = exports.JOIN_TIMEOUT = 1000; // milliseconds.
var COMMAND_TIMEOUT = exports.COMMAND_TIMEOUT = 1000; // milliseconds.

var CLIENT_PRIORITY = exports.CLIENT_PRIORITY = 100;

// See https://dev.twitch.tv/docs/irc/guide/#command--message-limits.
var RATE_LIMIT_USER = exports.RATE_LIMIT_USER = 20; // per period.
var RATE_LIMIT_MODERATOR = exports.RATE_LIMIT_MODERATOR = 100; // per period.
var RATE_LIMIT_KNOWN_BOT = exports.RATE_LIMIT_KNOWN_BOT = 50; // per period.
var RATE_LIMIT_VERIFIED_BOT = exports.RATE_LIMIT_VERIFIED_BOT = 7500; // per period.

var ERROR_CONNECT_TIMED_OUT = exports.ERROR_CONNECT_TIMED_OUT = 'ERROR: connect timed out';
var ERROR_CONNECTION_IN_PROGRESS = exports.ERROR_CONNECTION_IN_PROGRESS = 'ERROR: connection in progress';
var ERROR_JOIN_TIMED_OUT = exports.ERROR_JOIN_TIMED_OUT = 'ERROR: join timed out';
var ERROR_SAY_TIMED_OUT = exports.ERROR_SAY_TIMED_OUT = 'ERROR: say timed out';
var ERROR_COMMAND_TIMED_OUT = exports.ERROR_COMMAND_TIMED_OUT = 'ERROR: command timed out';
var ERROR_COMMAND_UNRECOGNIZED = exports.ERROR_COMMAND_UNRECOGNIZED = 'ERROR: command unrecognized';
var ERROR_PART_TIMED_OUT = exports.ERROR_PART_TIMED_OUT = 'ERROR: part timed out';

var MESSAGE_PARAMETER_PREFIX = exports.MESSAGE_PARAMETER_PREFIX = 'msgParam';
var MESSAGE_PARAMETER_PREFIX_RE = exports.MESSAGE_PARAMETER_PREFIX_RE = new RegExp('^' + MESSAGE_PARAMETER_PREFIX + '(\\w+)');
var PRIVATE_MESSAGE_HOSTED_RE = exports.PRIVATE_MESSAGE_HOSTED_RE = /:.+@jtv\.tmi\.twitch\.tv PRIVMSG #?(\w+) :(\w+) is now (?:(auto) )?hosting[A-z ]+(\d+)?/;

var ANONYMOUS_USERNAME = exports.ANONYMOUS_USERNAME = 'justinfan';
var ANONYMOUS_USERNAME_RE = exports.ANONYMOUS_USERNAME_RE = new RegExp('^' + ANONYMOUS_USERNAME + '(\\d+)$');

/** @typedef {string} ClientReadyState */
/**
 * Chat client ready state
 * @readonly
 * @enum {ClientReadyState}
 * @property {string} 0 not ready
 * @property {string} 1 connecting
 * @property {string} 2 reconnecting
 * @property {string} 3 connecting
 * @property {string} 4 disconnecting
 * @property {string} 5 disconnected
 */
var READY_STATES = exports.READY_STATES = {
  0: 'NOT_READY',
  1: 'CONNECTING',
  2: 'RECONNECTING',
  3: 'CONNECTED',
  4: 'DISCONNECTING',
  5: 'DISCONNECTED'
};

var CAPABILITIES = exports.CAPABILITIES = ['twitch.tv/tags', 'twitch.tv/commands', 'twitch.tv/membership'];

// See https://dev.twitch.tv/docs/irc/membership/.
var MEMBERSHIP_COMMANDS = exports.MEMBERSHIP_COMMANDS = {
  JOIN: 'JOIN',
  MODE: 'MODE',
  PART: 'PART',
  NAMES: '353',
  NAMES_END: '366'

  // See https://dev.twitch.tv/docs/irc/tags/.
};var TAG_COMMANDS = exports.TAG_COMMANDS = {
  CLEAR_CHAT: 'CLEARCHAT',
  GLOBAL_USER_STATE: 'GLOBALUSERSTATE',
  PRIVATE_MESSAGE: 'PRIVMSG',
  ROOM_STATE: 'ROOMSTATE',
  USER_NOTICE: 'USERNOTICE',
  USER_STATE: 'USERSTATE'
};

var OTHER_COMMANDS = exports.OTHER_COMMANDS = {
  WELCOME: '001',
  PING: 'PING',
  PONG: 'PONG',
  WHISPER: 'PRIVMSG #jtv'

  // See https://dev.twitch.tv/docs/irc/commands/.
};var COMMANDS = exports.COMMANDS = _extends({}, OTHER_COMMANDS, MEMBERSHIP_COMMANDS, TAG_COMMANDS, {

  CLEAR_CHAT: 'CLEARCHAT',
  HOST_TARGET: 'HOSTTARGET',
  NOTICE: 'NOTICE',
  RECONNECT: 'RECONNECT',
  ROOM_STATE: 'ROOMSTATE',
  USER_NOTICE: 'USERNOTICE',
  USER_STATE: 'USERSTATE'

  // See https://dev.twitch.tv/docs/irc/commands/#msg-id-tags-for-the-notice-commands-capability.
});var NOTICE_MESSAGE_IDS = exports.NOTICE_MESSAGE_IDS = {
  ALREADY_BANNED: 'already_banned',
  ALREADY_EMOTE_ONLY_OFF: 'already_emote_only_off',
  ALREADY_EMOTE_ONLY_ON: 'already_emote_only_on',
  ALREADY_R9K_OFF: 'already_r9k_off',
  ALREADY_R9K_ON: 'already_r9k_on',
  ALREADY_SUBS_OFF: 'already_subs_off',
  ALREADY_SUBS_ON: 'already_subs_on',
  BAD_HOST_HOSTING: 'bad_host_hosting',
  BAN_SUCCESS: 'ban_success',
  BAD_UNBAN_NO_BAN: 'bad_unban_no_ban',
  COLOR_CHANGED: 'color_changed',
  CMDS_AVAILABLE: 'cmds_available',
  COMMERCIAL_SUCCESS: 'commercial_success',
  EMOTE_ONLY_OFF: 'emote_only_off',
  EMOTE_ONLY_ON: 'emote_only_on',
  FOLLOWERS_OFF: 'followers_off',
  FOLLOWERS_ON: 'followers_on',
  FOLLOWERS_ON_ZERO: 'followers_on_zero',
  HOST_OFF: 'host_off',
  HOST_ON: 'host_on',
  HOSTS_REMAINING: 'hosts_remaining',
  MSG_CHANNEL_SUSPENDED: 'msg_channel_suspended',
  R9K_OFF: 'r9k_off',
  R9K_ON: 'r9k_on',
  ROOM_MODS: 'room_mods',
  SLOW_OFF: 'slow_off',
  SLOW_ON: 'slow_on',
  SUBS_OFF: 'subs_off',
  SUBS_ON: 'subs_on',
  TIMEOUT_SUCCESS: 'timeout_success',
  UNBAN_SUCCESS: 'unban_success',
  UNRAID_SUCCESS: 'unraid_succss',
  UNRECOGNIZED_COMMAND: 'unrecognized_cmd'

  // See https://dev.twitch.tv/docs/irc/tags#usernotice-twitch-tags.
};var USER_NOTICE_MESSAGE_IDS = exports.USER_NOTICE_MESSAGE_IDS = {
  ANON_GIFT_PAID_UPGRADE: 'anongiftpaidupgrade',
  GIFT_PAID_UPGRADE: 'giftpaidupgrade',
  RAID: 'raid',
  RESUBSCRIPTION: 'resub',
  RITUAL: 'ritual',
  SUBSCRIPTION: 'sub',
  SUBSCRIPTION_GIFT: 'subgift',
  SUBSCRIPTION_GIFT_COMMUNITY: 'submysterygift'
};

var MESSAGE_IDS = exports.MESSAGE_IDS = _extends({}, NOTICE_MESSAGE_IDS, USER_NOTICE_MESSAGE_IDS);

/**
 * Chat events
 * @readonly
 * @enum {string}
 * @property {string} RAW
 */
var EVENTS = exports.EVENTS = _extends({}, Object.keys(NOTICE_MESSAGE_IDS).reduce(function (noticeEvents, noticeEvent) {
  return _extends({}, noticeEvents, _defineProperty({}, noticeEvent, COMMANDS.NOTICE + '/' + noticeEvent));
}, {}), COMMANDS, {

  RAW: 'RAW',

  ALL: '*',
  CONNECTED: 'CONNECTED',
  DISCONNECTED: 'DISCONNECTED',
  AUTHENTICATION_FAILED: 'AUTHENTICATION_FAILED',
  ERROR_ENCOUNTERED: 'ERROR_ENCOUNTERED',
  PARSE_ERROR_ENCOUNTERED: 'PARSE_ERROR_ENCOUNTERED',

  ANON_GIFT_PAID_UPGRADE: 'ANON_GIFT_PAID_UPGRADE',
  GIFT_PAID_UPGRADE: 'GIFT_PAID_UPGRADE',
  RAID: 'RAID',
  RESUBSCRIPTION: 'RESUBSCRIPTION',
  RITUAL: 'RITUAL',
  SUBSCRIPTION: 'SUBSCRIPTION',
  SUBSCRIPTION_GIFT: 'SUBSCRIPTION_GIFT',
  SUBSCRIPTION_GIFT_COMMUNITY: 'SUBSCRIPTION_GIFT_COMMUNITY',

  // ROOM_MODS: 'ROOM_MODS',
  MOD_GAINED: 'MOD_GAINED',
  MOD_LOST: 'MOD_LOST',

  USER_BANNED: 'USER_BANNED',

  CHEER: 'CHEER',
  HOSTED: 'HOSTED',
  HOSTED_WITHOUT_VIEWERS: 'HOSTED/WITHOUT_VIEWERS',
  HOSTED_WITH_VIEWERS: 'HOSTED/WITH_VIEWERS',
  HOSTED_AUTO: 'HOSTED/AUTO'

  // See https://help.twitch.tv/customer/en/portal/articles/659095-chat-moderation-commands.
});var CHAT_COMMANDS = exports.CHAT_COMMANDS = {
  BAN: 'ban',
  CLEAR: 'clear',
  COLOR: 'color',
  COMMERCIAL: 'commercial',
  // DISCONNECTED: 'disconnect',
  EMOTE_ONLY: 'emoteonly',
  EMOTE_ONLY_OFF: 'emoteonlyoff',
  FOLLOWERS_ONLY: 'followers',
  FOLLOWERS_ONLY_OFF: 'followersoff',
  HELP: 'help',
  HOST: 'host',
  MARKER: 'marker',
  ME: 'me',
  MOD: 'mod',
  MODS: 'mods',
  // PART: 'part',
  R9K: 'r9kbeta',
  R9K_OFF: 'r9kbetaoff',
  RAID: 'raid',
  SLOW: 'slow',
  SLOW_OFF: 'slowoff',
  SUBSCRIBERS: 'subscribers',
  SUBSCRIBERS_OFF: 'subscribersoff',
  TIMEOUT: 'timeout',
  UNBAN: 'unban',
  UNHOST: 'unhost',
  UNMOD: 'unmod',
  UNRAID: 'unraid'
  // WHISPER: 'w',
};
//# sourceMappingURL=constants.js.map