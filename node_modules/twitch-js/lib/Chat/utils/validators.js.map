{"version":3,"sources":["../../../src/Chat/utils/validators.js"],"names":["constants","sanitizers","chatOptions","shape","username","token","value","isKnown","isVerified","connectionTimeout","joinTimeout","onAuthenticationFailure","options","maybeOptions","CONNECTION_TIMEOUT","JOIN_TIMEOUT","Promise","reject","clientOptions","server","port","ssl","CHAT_SERVER","CHAT_SERVER_SSL_PORT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAYA;;IAAYA,S;;AACZ;;IAAYC,U;;;;;;AAEZ,IAAMC,cAAc,SAAdA,WAAc,eAAgB;AAClC;;;;;;;;;;;;AAYA,MAAMC,QAAQ;AACZC,gCADY;AAEZC,WAAO;AAAA,aAAS,qBAAMC,KAAN,KAAgB,wBAASA,KAAT,CAAzB;AAAA,KAFK;AAGZC,gCAHY;AAIZC,mCAJY;AAKZC,yCALY;AAMZC,mCANY;AAOZC;AAPY,GAAd;;AAUA,MAAMC,UAAU,qCAETC,YAFS;AAGZT,cAAUH,WAAWG,QAAX,CAAoBS,aAAaT,QAAjC,CAHE;AAIZC,WAAOJ,WAAWI,KAAX,CAAiBQ,aAAaR,KAA9B;AAJK,MAMd;AACEE,aAAS,KADX;AAEEC,gBAAY,KAFd;AAGEC,uBAAmBT,UAAUc,kBAH/B;AAIEJ,iBAAaV,UAAUe,YAJzB;AAKEJ,6BAAyB;AAAA,aAAMK,QAAQC,MAAR,EAAN;AAAA;AAL3B,GANc,CAAhB;;AAeA,2BACE,0BAAWL,OAAX,EAAoBT,KAApB,CADF,EAEE,kDAFF;;AAKA,SAAOS,OAAP;AACD,CA5CD;;AA8CA,IAAMM,gBAAgB,SAAhBA,aAAgB,eAAgB;AACpC,MAAMf,QAAQ;AACZC,gCADY;AAEZC,6BAFY;AAGZc,8BAHY;AAIZC,4BAJY;AAKZC,4BALY;AAMZd,gCANY;AAOZC;AAPY,GAAd;;AAUA,MAAMI,UAAU,qCAETC,YAFS;AAGZT,cAAUH,WAAWG,QAAX,CAAoBS,aAAaT,QAAjC,CAHE;AAIZC,WAAOJ,WAAWI,KAAX,CAAiBQ,aAAaR,KAA9B;AAJK,MAMd;AACEc,YAAQnB,UAAUsB,WADpB;AAEEF,UAAMpB,UAAUuB,oBAFlB;AAGEF,SAAK,IAHP;AAIEd,aAAS,KAJX;AAKEC,gBAAY;AALd,GANc,CAAhB;;AAeA,2BACE,0BAAWI,OAAX,EAAoBT,KAApB,CADF,EAEE,yDAFF;;AAKA,SAAOS,OAAP;AACD,CAhCD;;QAkCSV,W,GAAAA,W;QAAagB,a,GAAAA,a","file":"validators.js","sourcesContent":["import invariant from 'invariant'\n\nimport {\n  conformsTo,\n  defaults,\n  isString,\n  isFinite,\n  isFunction,\n  isBoolean,\n  isNil,\n} from 'lodash'\n\nimport * as constants from '../constants'\nimport * as sanitizers from './sanitizers'\n\nconst chatOptions = maybeOptions => {\n  /**\n   * Chat options\n   * @typedef {Object} ChatOptions\n   * @property {string} [username]\n   * @property {string} [token] OAuth token (use {@link https://twitchtokengenerator.com/} to generate one)\n   * @property {boolean} [isKnown] bot is known (see {@link https://dev.twitch.tv/docs/irc/guide/#known-and-verified-bots} for more information)\n   * @property {boolean} [isVerified] bot is verified (see {@link https://dev.twitch.tv/docs/irc/guide/#known-and-verified-bots} for more information)\n   * @property {number} [connectionTimeout=CONNECTION_TIMEOUT]\n   * @property {number} [joinTimeout=JOIN_TIMEOUT]\n   * @property {Object} [log]\n   * @property {Function} [onAuthenticationFailure]\n   */\n  const shape = {\n    username: isString,\n    token: value => isNil(value) || isString(value),\n    isKnown: isBoolean,\n    isVerified: isBoolean,\n    connectionTimeout: isFinite,\n    joinTimeout: isFinite,\n    onAuthenticationFailure: isFunction,\n  }\n\n  const options = defaults(\n    {\n      ...maybeOptions,\n      username: sanitizers.username(maybeOptions.username),\n      token: sanitizers.token(maybeOptions.token),\n    },\n    {\n      isKnown: false,\n      isVerified: false,\n      connectionTimeout: constants.CONNECTION_TIMEOUT,\n      joinTimeout: constants.JOIN_TIMEOUT,\n      onAuthenticationFailure: () => Promise.reject(),\n    },\n  )\n\n  invariant(\n    conformsTo(options, shape),\n    '[twitch-js/Chat] options: Expected valid options',\n  )\n\n  return options\n}\n\nconst clientOptions = maybeOptions => {\n  const shape = {\n    username: isString,\n    token: isString,\n    server: isString,\n    port: isFinite,\n    ssl: isBoolean,\n    isKnown: isBoolean,\n    isVerified: isBoolean,\n  }\n\n  const options = defaults(\n    {\n      ...maybeOptions,\n      username: sanitizers.username(maybeOptions.username),\n      token: sanitizers.token(maybeOptions.token),\n    },\n    {\n      server: constants.CHAT_SERVER,\n      port: constants.CHAT_SERVER_SSL_PORT,\n      ssl: true,\n      isKnown: false,\n      isVerified: false,\n    },\n  )\n\n  invariant(\n    conformsTo(options, shape),\n    '[twitch-js/Chat/Client] options: Expected valid options',\n  )\n\n  return options\n}\n\nexport { chatOptions, clientOptions }\n"]}