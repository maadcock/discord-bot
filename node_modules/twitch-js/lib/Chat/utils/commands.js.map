{"version":3,"sources":["../../../src/Chat/utils/commands.js"],"names":["utils","constants","factory","Object","entries","CHAT_COMMANDS","forEach","key","command","chatInstance","channel","args","say","resolvers","commandOrMessage","exec","BAN","resolveOnEvent","EVENTS","BAN_SUCCESS","ALREADY_BANNED","CLEAR","CLEAR_CHAT","COLOR","COLOR_CHANGED","COMMERCIAL","COMMERCIAL_SUCCESS","EMOTE_ONLY","EMOTE_ONLY_ON","ALREADY_EMOTE_ONLY_ON","EMOTE_ONLY_OFF","ALREADY_EMOTE_ONLY_OFF","FOLLOWERS_ONLY","FOLLOWERS_ON_ZERO","FOLLOWERS_ON","FOLLOWERS_ONLY_OFF","FOLLOWERS_OFF","HELP","COMMANDS_AVAILABLE","HOST","HOST_ON","MARKER","Promise","resolve","MOD","MOD_SUCCESS","BAD_MOD_MOD","MODS","ROOM_MODS","R9K","R9K_ON","ALREADY_R9K_ON","R9K_OFF","ALREADY_R9K_OFF","RAID","SLOW","SLOW_ON","SLOW_OFF","SUBSCRIBERS","SUBS_ON","ALREADY_SUBS_ON","SUBSCRIBERS_OFF","SUBS_OFF","ALREADY_SUBS_OFF","TIMEOUT","TIMEOUT_SUCCESS","UNBAN","UNBAN_SUCCESS","BAD_UNBAN_NO_BAN","UNHOST","HOST_OFF","UNMOD","UNRAID","UNRAID_SUCCESS","COMMANDS","USER_STATE"],"mappings":"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","file":"commands.js","sourcesContent":["import { camelCase } from 'lodash'\n\nimport * as utils from '../../utils'\nimport * as constants from '../constants'\n\nconst factory = chatInstance => {\n  Object.entries(constants.CHAT_COMMANDS).forEach(([key, command]) => {\n    chatInstance[camelCase(key)] = (channel, ...args) =>\n      chatInstance.say(channel, `/${command}`, ...args)\n  })\n}\n\nconst resolvers = chatInstance => (channel, commandOrMessage) => {\n  const [, command] = /^\\/(.+)/.exec(commandOrMessage) || []\n\n  switch (command) {\n    case constants.CHAT_COMMANDS.BAN:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.BAN_SUCCESS}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_BANNED}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.CLEAR:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.CLEAR_CHAT}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.COLOR:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.COLOR_CHANGED}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.COMMERCIAL:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.COMMERCIAL_SUCCESS}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.EMOTE_ONLY:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.EMOTE_ONLY_ON}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_EMOTE_ONLY_ON}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.EMOTE_ONLY_OFF:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.EMOTE_ONLY_OFF}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_EMOTE_ONLY_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.FOLLOWERS_ONLY:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.FOLLOWERS_ON_ZERO}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.FOLLOWERS_ON}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.FOLLOWERS_ONLY_OFF:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.FOLLOWERS_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.HELP:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.COMMANDS_AVAILABLE}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.HOST:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.HOST_ON}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.MARKER:\n      return [Promise.resolve()]\n\n    // case constants.CHAT_COMMANDS.ME:\n    // Use resolver for private messages.\n\n    case constants.CHAT_COMMANDS.MOD:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.MOD_SUCCESS}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.BAD_MOD_MOD}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.MODS:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ROOM_MODS}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.R9K:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.R9K_ON}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_R9K_ON}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.R9K_OFF:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.R9K_OFF}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_R9K_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.RAID:\n      return [Promise.resolve()]\n\n    case constants.CHAT_COMMANDS.SLOW:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.SLOW_ON}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.SLOW_OFF:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.SLOW_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.SUBSCRIBERS:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.SUBS_ON}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_SUBS_ON}/${channel}`,\n        ),\n      ]\n    case constants.CHAT_COMMANDS.SUBSCRIBERS_OFF:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.SUBS_OFF}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.ALREADY_SUBS_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.TIMEOUT:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.TIMEOUT_SUCCESS}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.UNBAN:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.UNBAN_SUCCESS}/${channel}`,\n        ),\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.BAD_UNBAN_NO_BAN}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.UNHOST:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.HOST_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.UNMOD:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.HOST_OFF}/${channel}`,\n        ),\n      ]\n\n    case constants.CHAT_COMMANDS.UNRAID:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.EVENTS.UNRAID_SUCCESS}/${channel}`,\n        ),\n      ]\n\n    // Resolver for private messages.\n    default:\n      return [\n        utils.resolveOnEvent(\n          chatInstance,\n          `${constants.COMMANDS.USER_STATE}/${channel}`,\n        ),\n      ]\n  }\n}\n\nexport { factory, resolvers }\n"]}