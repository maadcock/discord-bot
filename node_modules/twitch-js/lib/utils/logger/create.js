'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _consola = require('consola');

var _consola2 = _interopRequireDefault(_consola);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Elegant Console Logger for Node.js and Browser
                                                                                                                                                                                                                              * @external consola
                                                                                                                                                                                                                              * @see {@link https://github.com/nuxt/consola#readme consola}
                                                                                                                                                                                                                              */


var createLogger = function createLogger() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var scope = _ref.scope,
      options = _objectWithoutProperties(_ref, ['scope']);

  var label = ['twitch-js'].concat(scope || []).join('/');

  var logger = _consola2.default.create(options).withScope(label);

  logger.startTimer = function (startProps) {
    var now = new Date();

    if (startProps && startProps.message) {
      logger.info(startProps);
    }

    return {
      done: function done(doneProps) {
        var elapsed = new Date() - now;
        logger.success({ message: doneProps.message + ' (' + elapsed + 'ms)' });
      }
    };
  };

  return logger;
};

exports.default = createLogger;
//# sourceMappingURL=create.js.map